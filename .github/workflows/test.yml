name: Test and Lint

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest

    - name: Lint with flake8
      run: |
        # 停止构建如果有Python语法错误或未定义的名称
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # 将其他问题作为警告处理
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test import and basic functionality
      run: |
        python -c "import image_filter_main; print('Main module imported successfully')"
        python -c "import ultra_fast_filter; print('Ultra fast filter module imported successfully')"
        python -c "import remove_approval_tags; print('Remove approval tags module imported successfully')"

    - name: Check required files exist
      run: |
        test -f image_filter_main.py || (echo "Missing image_filter_main.py" && exit 1)
        test -f ultra_fast_filter.py || (echo "Missing ultra_fast_filter.py" && exit 1)
        test -f remove_approval_tags.py || (echo "Missing remove_approval_tags.py" && exit 1)
        test -f filter_config.json || (echo "Missing filter_config.json" && exit 1)
        test -f requirements.txt || (echo "Missing requirements.txt" && exit 1)
        echo "All required files exist"

    - name: Validate JSON config files
      run: |
        python -c "import json; json.load(open('filter_config.json')); print('filter_config.json is valid')"
        python -c "import json; json.load(open('config.json')) if __import__('os').path.exists('config.json') else print('config.json not found, skipping validation')"
